{"componentChunkName":"component---src-templates-doc-page-js","path":"/docs/form-message/","result":{"data":{"mdx":{"frontmatter":{"title":"FormMessage","component":"FormMessage","description":"Useful for displaying messages under form fields."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FormMessage\",\n  \"component\": \"FormMessage\",\n  \"description\": \"Useful for displaying messages under form fields.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Invalid input value. Only letters are allowed.\\\" hasIcon />\\n\")), mdx(PropsTable, {\n    data: {\n      message: {\n        type: 'string',\n        description: 'Required. The message to show.'\n      },\n      variant: {\n        type: 'error | warning | info | success',\n        \"default\": 'error',\n        description: 'Optional. Defines which color to apply to the message and icon background if present.'\n      },\n      hasIcon: {\n        type: 'boolean',\n        \"default\": 'false',\n        description: 'Optional. Determines whether or not it should show the icon.'\n      },\n      icon: {\n        type: 'ReactNode',\n        description: 'Optional. Element to use in the Icon slot. If this property is used, hasIcon is ignored.'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Examples\"), mdx(\"h3\", {\n    \"id\": \"colors\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#colors\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Colors\"), mdx(\"p\", null, \"The color prop accepts any color as string.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Error message.\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Warning message.\\\" variant=\\\"warning\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Information message.\\\" variant=\\\"info\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Success message.\\\" variant=\\\"success\\\" />\\n\")), mdx(\"h3\", {\n    \"id\": \"icons\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#icons\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Icons\"), mdx(\"p\", null, \"The icon prop accepts a ReactNode and displays it inside a colored container.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Error message.\\\" variant=\\\"error\\\" hasIcon />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Warning message.\\\" variant=\\\"warning\\\" hasIcon />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Information message.\\\" variant=\\\"info\\\" hasIcon />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage message=\\\"Success message.\\\" variant=\\\"success\\\" hasIcon />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<FormMessage\\n  message=\\\"Saved successfully.\\\"\\n  variant=\\\"success\\\"\\n  icon={\\n    <Flex mr={1}>\\n      <Icon name=\\\"save\\\" fill={theme.colors.positive} />\\n    </Flex>\\n  }\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/docs/form-message/"}}}