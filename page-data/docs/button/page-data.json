{"componentChunkName":"component---src-templates-doc-page-js","path":"/docs/button/","result":{"data":{"mdx":{"frontmatter":{"title":"Button","component":"Button","description":"Useful to communicate actions to your users."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button\",\n  \"component\": \"Button\",\n  \"description\": \"Useful to communicate actions to your users.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar SystemProps = makeShortcode(\"SystemProps\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button>New project</Button>\\n\")), mdx(PropsTable, {\n    data: {\n      children: {\n        type: 'ReactNode',\n        description: 'The content to render'\n      },\n      variant: {\n        type: 'gray | blue | green | red',\n        \"default\": 'gray',\n        description: 'The variant to apply'\n      },\n      size: {\n        type: '0 | 1',\n        \"default\": '0',\n        description: 'The size to apply'\n      },\n      isWaiting: {\n        type: 'Boolean',\n        \"default\": 'false',\n        description: 'Whether it is waiting or not'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }), mdx(SystemProps, {\n    props: ['margin'],\n    mdxType: \"SystemProps\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Examples\"), mdx(\"h3\", {\n    \"id\": \"colors\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#colors\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Colors\"), mdx(\"p\", null, \"There are 4 colors to choose from.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button variant=\\\"gray\\\">\\n  Cancel\\n</Button>\\n<Button variant=\\\"blue\\\" ml={6}>\\n  Save\\n</Button>\\n<Button variant=\\\"green\\\" ml={6}>\\n  Copy\\n</Button>\\n<Button variant=\\\"red\\\" ml={6}>\\n  Delete\\n</Button>\\n\")), mdx(\"h3\", {\n    \"id\": \"sizes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#sizes\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Sizes\"), mdx(\"p\", null, \"There are 2 sizes to choose from.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button size={0}>\\n  Default\\n</Button>\\n<Button size={1} ml={6}>\\n  Large\\n</Button>\\n\")), mdx(\"h3\", {\n    \"id\": \"waiting-state\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#waiting-state\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Waiting state\"), mdx(\"p\", null, \"When the user is waiting for the server to respond.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button isWaiting>Waiting</Button>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/docs/button/"}}}