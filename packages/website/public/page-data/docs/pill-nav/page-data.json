{"componentChunkName":"component---src-templates-doc-page-js","path":"/docs/pill-nav/","result":{"data":{"mdx":{"frontmatter":{"title":"Pill Nav","component":"PillNav","description":"Useful for displaying a list of navigation choices."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pill Nav\",\n  \"component\": \"PillNav\",\n  \"description\": \"Useful for displaying a list of navigation choices.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar SystemProps = makeShortcode(\"SystemProps\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<PillNav>\\n  <PillButton>Settings</PillButton>\\n  <PillButton>Assets</PillButton>\\n  <PillButton>Components</PillButton>\\n  <PillButton>Screen</PillButton>\\n</PillNav>\\n\")), mdx(PropsTable, {\n    data: {\n      children: {\n        type: 'ReactNode',\n        description: 'The content to render'\n      },\n      pillWidth: {\n        type: 'CSS.WidthProperty',\n        description: 'The width to apply to its children'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }), mdx(SystemProps, {\n    props: ['margin'],\n    mdxType: \"SystemProps\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/docs/pill-nav/"}}}