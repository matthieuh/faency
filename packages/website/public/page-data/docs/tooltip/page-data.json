{
  "componentChunkName": "component---src-templates-doc-page-js",
  "path": "/docs/tooltip/",
  "result": {
    "data": {
      "mdx": {
        "frontmatter": {
          "title": "Tooltip",
          "component": "Tooltip",
          "description": "An accessible Tooltip component that shows information related to an element when it is hovered or focused."
        },
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tooltip\",\n  \"component\": \"Tooltip\",\n  \"description\": \"An accessible Tooltip component that shows information related to an element when it is hovered or focused.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Tooltip label=\\\"Default tooltip\\\">\\n  <Button size={1}>Hover me</Button>\\n</Tooltip>\\n\")), mdx(PropsTable, {\n    data: {\n      children: {\n        type: 'ReactNode',\n        description: 'The content to render as target'\n      },\n      label: {\n        type: 'String',\n        description: 'The content to render in the Tooltip'\n      },\n      preferredPosition: {\n        type: 'top | bottom',\n        \"default\": 'bottom',\n        description: 'The position of the tooltip compared to the target'\n      },\n      preferredAlignment: {\n        type: 'left | center | right',\n        \"default\": 'bottom',\n        description: 'The alignment of the tooltip compared to the target'\n      },\n      active: {\n        type: 'boolean',\n        description: 'The default state of the Tooltip. If active the tooltip will displayed.'\n      },\n      action: {\n        type: 'copy',\n        description: 'Actions are giving super powers to the toolip'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Examples\"), mdx(\"h3\", {\n    \"id\": \"preferred-alignment\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#preferred-alignment\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Preferred Alignment\"), mdx(\"p\", null, \"There are 2 position options to choose from.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Box mb=\\\"6\\\">\\n  <Tooltip label=\\\"Tooltip\\\" preferredPosition=\\\"bottom\\\">\\n    <Text>Bottom (default)</Text>\\n  </Tooltip>\\n</Box>\\n\\n<Box>\\n  <Tooltip label=\\\"Tooltip\\\" preferredPosition=\\\"top\\\">\\n    <Text>Top</Text>\\n  </Tooltip>\\n</Box>\\n\")), mdx(\"h3\", {\n    \"id\": \"preferred-alignment-1\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#preferred-alignment-1\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Preferred Alignment\"), mdx(\"p\", null, \"There are 3 alignment options to choose from.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Box mb=\\\"6\\\">\\n  <Tooltip label=\\\"Tooltip\\\" preferredAlignment=\\\"left\\\">\\n    <Text>Left</Text>\\n  </Tooltip>\\n</Box>\\n\\n<Box mb=\\\"6\\\">\\n  <Tooltip label=\\\"Tooltip\\\" preferredAlignment=\\\"center\\\">\\n    <Text>Center</Text>\\n  </Tooltip>\\n</Box>\\n\\n<Box>\\n  <Tooltip label=\\\"Tooltip\\\" preferredAlignment=\\\"right\\\">\\n    <Text>Right</Text>\\n  </Tooltip>\\n</Box>\\n\")), mdx(\"h3\", {\n    \"id\": \"active\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#active\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Active\"), mdx(\"p\", null, \"The default state of the Tooltip. If active the tooltip will displayed.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Box>\\n  <Tooltip label=\\\"Tooltip\\\" active>\\n    <Text>Active by default</Text>\\n  </Tooltip>\\n</Box>\\n\")), mdx(\"h3\", {\n    \"id\": \"action\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#action\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Action\"), mdx(\"p\", null, \"Actions are giving super powers to the toolip\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Box>\\n  <Tooltip label=\\\"Copiable Tooltip content\\\" action=\\\"copy\\\">\\n    <Text>Will add a copy button to add tooltip content to the user clipboard.</Text>\\n  </Tooltip>\\n</Box>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"
      }
    },
    "pageContext": { "slug": "/docs/tooltip/" }
  }
}
