{"componentChunkName":"component---src-templates-doc-page-js","path":"/docs/right-click-menu/","result":{"data":{"mdx":{"frontmatter":{"title":"Right Click Menu","component":"RightClickMenu","description":"Useful for displaying a list of contextual actions on right click."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Right Click Menu\",\n  \"component\": \"RightClickMenu\",\n  \"description\": \"Useful for displaying a list of contextual actions on right click.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar Heading = makeShortcode(\"Heading\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live removeFragment\",\n    \"live\": true,\n    \"removeFragment\": true\n  }), \"() => {\\n  const [isChecked, setIsChecked] = React.useState(true);\\n  const [value, setValue] = React.useState('2');\\n\\n  return (\\n    <>\\n      <Text as=\\\"p\\\" mb={2}>\\n        Right-click on the box to display a menu\\n      </Text>\\n      <RightClickMenu\\n        menu={\\n          <Menu>\\n            <MenuItem label=\\\"Simple item one\\\" />\\n            <MenuItem label=\\\"Simple item two\\\" />\\n            <MenuItem label=\\\"Simple item three\\\" />\\n            <MenuItemSeparator />\\n            <MenuItemLabel>An item label</MenuItemLabel>\\n            <MenuItemSeparator />\\n            <MenuItemCheckbox\\n              label=\\\"Checkbox item\\\"\\n              checked={isChecked}\\n              onChange={setIsChecked}\\n            />\\n            <MenuItemSeparator />\\n            <MenuItemRadioGroup value={value} onChange={setValue}>\\n              <MenuItemRadio value=\\\"1\\\" label=\\\"Radio item one\\\" />\\n              <MenuItemRadio value=\\\"2\\\" label=\\\"Radio item two\\\" />\\n              <MenuItemRadio value=\\\"3\\\" label=\\\"Radio item three\\\" />\\n            </MenuItemRadioGroup>\\n          </Menu>\\n        }\\n      >\\n        <RightClickable>\\n          <Box width={9} height={9} bg=\\\"blue600\\\" borderRadius={1} />\\n        </RightClickable>\\n      </RightClickMenu>\\n    </>\\n  );\\n};\\n\")), mdx(PropsTable, {\n    data: {\n      menu: {\n        type: 'Menu element',\n        description: 'The menu to render (see Menu component for usage)'\n      },\n      children: {\n        type: 'ReactNode',\n        description: 'The children to render. In particular must contain some RightClickable elements to trigger the menu'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }), mdx(Heading, {\n    as: \"h2\",\n    size: 4,\n    fontWeight: 500,\n    mb: 2,\n    mt: 6,\n    lineHeight: 4,\n    mdxType: \"Heading\"\n  }, \"RightClickable\"), mdx(PropsTable, {\n    data: {\n      children: {\n        type: 'ReactElement',\n        description: 'A react element on which to attach the right-click functionality'\n      }\n    },\n    mdxType: \"PropsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/docs/right-click-menu/"}}}